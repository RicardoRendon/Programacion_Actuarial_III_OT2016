else if (resultado == "falla"){
co <- 17}
else if (resultado == "neumonia") {
co <- 23}
else  {
stop("resultado inv??lido")
}
s <- numeric()
St <- levels(Tasa$State)
n <- length(St)
for(i in 1:n) {
EstadoI <- Tasa[St[i] == Tasa$State,]
co1 <- EstadoI[, co]
or <- EstadoI[order(co1, na.last = NA), ]
primero <- or[1,2]
ultimo <- or[nrow(or),2]
if(num == "mejor"){
numm <- primero}
else if(num == "peor"){
numm <- ultimo}
else {numm <- or[num, 2]}
Hosp <- c(numm, St[i])
s <- append(s,Hosp)
}
m <- matrix(s,n,2,byrow = T)
colnames(m) <- c("Hospital", "State")
rownames(m)<- St
n1 <- data.frame(m)
n1
}
head(rankingcompleto("ataque", 20), 10)
tail(rankingcompleto("neumonia", "peor"), 3)
rankingcompleto <- function(resultado, num = "mejor") {
setwd("C:/Users/Pablo Rendon/Documents/GitHub/Programacion_Actuarial_III_OT2016")
#Lectura de datos
data<- read.csv("outcome-of-care-measures.csv")
#Validación de datos
data[,2] <- as.character(data[, 2])
if (resultado == "ataque"){
columna <- 11
}  else if (resultado == "falla"){
columna <- 17
}    else if (resultado == "neumonia") {
columna <- 23
}    else {
stop( print("resultado inválido"))
}
s <- numeric()
St <- levels(data$State)
n <- length(St)
for(i in 1:n) {
EstadoI <- data[St[i] == data$State,]
co1 <- EstadoI[, columna]
or <- EstadoI[order(co1, na.last = NA), ]
primero <- or[1,2]
ultimo <- or[nrow(or),2]
if(num == "mejor"){
numm <- primero}
else if(num == "peor"){
numm <- ultimo}
else {numm <- or[num, 2]}
Hosp <- c(numm, St[i])
s <- append(s,Hosp)
}
m <- matrix(s,n,2,byrow = T)
colnames(m) <- c("Hospital", "State")
rownames(m)<- St
n1 <- data.frame(m)
n1
}
head(rankingcompleto("ataque", 20), 10)
tail(rankingcompleto("neumonia", "peor"), 3)
head(rankingcompleto("ataque", k), 10)
head(rankingcompleto("ataque", "k"), 10)
head(rankingcompleto("ataque", 40), 10)
head(rankingcompleto("ataque", 1), 10)
rankingcompleto <- function(resultado, num = "mejor") {
setwd("C:/Users/Pablo Rendon/Documents/GitHub/Programacion_Actuarial_III_OT2016")
#Lectura de datos
data<- read.csv("outcome-of-care-measures.csv")
#Validación de datos
if (is.numeric(num)== F){
stop(print("num no es número"))
}
data[,2] <- as.character(data[, 2])
if (resultado == "ataque"){
columna <- 11
}  else if (resultado == "falla"){
columna <- 17
}    else if (resultado == "neumonia") {
columna <- 23
}    else {
stop( print("resultado inválido"))
}
s <- numeric()
St <- levels(data$State)
n <- length(St)
for(i in 1:n) {
EstadoI <- data[St[i] == data$State,]
co1 <- EstadoI[, columna]
or <- EstadoI[order(co1, na.last = NA), ]
primero <- or[1,2]
ultimo <- or[nrow(or),2]
if(num == "mejor"){
numm <- primero}
else if(num == "peor"){
numm <- ultimo}
else {numm <- or[num, 2]}
Hosp <- c(numm, St[i])
s <- append(s,Hosp)
}
m <- matrix(s,n,2,byrow = T)
colnames(m) <- c("Hospital", "State")
rownames(m)<- St
n1 <- data.frame(m)
n1
}
head(rankingcompleto("ataque", 1), 10)
tail(rankingcompleto("neumonia", "peor"), 3)
rankingcompleto <- function(resultado, num = "mejor") {
setwd("C:/Users/Pablo Rendon/Documents/GitHub/Programacion_Actuarial_III_OT2016")
#Lectura de datos
data<- read.csv("outcome-of-care-measures.csv")
#Validación de datos
if (resultado == "ataque"){
columna <- 11
}  else if (resultado == "falla"){
columna <- 17
}    else if (resultado == "neumonia") {
columna <- 23
}    else {
stop( print("resultado inválido"))
}
data[,2] <- as.character(data[, 2])
s <- numeric()
St <- levels(data$State)
n <- length(St)
for(i in 1:n) {
EstadoI <- data[St[i] == data$State,]
co1 <- EstadoI[, columna]
or <- EstadoI[order(co1, na.last = NA), ]
primero <- or[1,2]
ultimo <- or[nrow(or),2]
if(num == "mejor"){
numm <- primero}
else if(num == "peor"){
numm <- ultimo}
else {numm <- or[num, 2]}
Hosp <- c(numm, St[i])
s <- append(s,Hosp)
}
m <- matrix(s,n,2,byrow = T)
colnames(m) <- c("Hospital", "Estado")
rownames(m)<- St
n1 <- data.frame(m)
n1
}
head(rankingcompleto("ataque", 1), 10)
tail(rankingcompleto("neumonia", "peor"), 3)
rankingcompleto <- function(resultado, num = "mejor") {
setwd("C:/Users/Pablo Rendon/Documents/GitHub/Programacion_Actuarial_III_OT2016")
#Lectura de datos
data<- read.csv("outcome-of-care-measures.csv")
#Validación de datos
if (resultado == "ataque"){
columna <- 11
}  else if (resultado == "falla"){
columna <- 17
}    else if (resultado == "neumonia") {
columna <- 23
}    else {
stop( print("resultado inválido"))
}
data[,2] <- as.character(data[, 2])
if (isnumeric(num)==FALSE){
stop("num no es número")
}
s <- numeric()
St <- levels(data$State)
n <- length(St)
for(i in 1:n) {
EstadoI <- data[St[i] == data$State,]
co1 <- EstadoI[, columna]
or <- EstadoI[order(co1, na.last = NA), ]
primero <- or[1,2]
ultimo <- or[nrow(or),2]
if(num == "mejor"){
numm <- primero}
else if(num == "peor"){
numm <- ultimo}
else {numm <- or[num, 2]}
Hosp <- c(numm, St[i])
s <- append(s,Hosp)
}
m <- matrix(s,n,2,byrow = T)
colnames(m) <- c("Hospital", "Estado")
rownames(m)<- St
n1 <- data.frame(m)
n1
}
head(rankingcompleto("ataque", 1), 10)
tail(rankingcompleto("neumonia", "peor"), 3)
rankingcompleto <- function(resultado, num = "mejor") {
setwd("C:/Users/Pablo Rendon/Documents/GitHub/Programacion_Actuarial_III_OT2016")
#Lectura de datos
data<- read.csv("outcome-of-care-measures.csv")
#Validación de datos
if (resultado == "ataque"){
columna <- 11
}  else if (resultado == "falla"){
columna <- 17
}    else if (resultado == "neumonia") {
columna <- 23
}    else {
stop( print("resultado inválido"))
}
data[,2] <- as.character(data[, 2])
if (is.numeric(num)==FALSE){
stop("num no es número")
}
s <- numeric()
St <- levels(data$State)
n <- length(St)
for(i in 1:n) {
EstadoI <- data[St[i] == data$State,]
co1 <- EstadoI[, columna]
or <- EstadoI[order(co1, na.last = NA), ]
primero <- or[1,2]
ultimo <- or[nrow(or),2]
if(num == "mejor"){
numm <- primero}
else if(num == "peor"){
numm <- ultimo}
else {numm <- or[num, 2]}
Hosp <- c(numm, St[i])
s <- append(s,Hosp)
}
m <- matrix(s,n,2,byrow = T)
colnames(m) <- c("Hospital", "Estado")
rownames(m)<- St
n1 <- data.frame(m)
n1
}
head(rankingcompleto("ataque", 1), 10)
tail(rankingcompleto("neumonia", "peor"), 3)
rankingcompleto <- function(resultado, num = "mejor") {
setwd("C:/Users/Pablo Rendon/Documents/GitHub/Programacion_Actuarial_III_OT2016")
#Lectura de datos
data<- read.csv("outcome-of-care-measures.csv")
#Validación de datos
if (resultado == "ataque"){
columna <- 11
}  else if (resultado == "falla"){
columna <- 17
}    else if (resultado == "neumonia") {
columna <- 23
}    else {
stop( print("resultado inválido"))
}
data[,2] <- as.character(data[, 2])
s <- numeric()
St <- levels(data$State)
n <- length(St)
for(i in 1:n) {
EstadoI <- data[St[i] == data$State,]
co1 <- EstadoI[, columna]
or <- EstadoI[order(co1, na.last = NA), ]
primero <- or[1,2]
ultimo <- or[nrow(or),2]
if(num == "mejor"){
numm <- primero
}else if(num == "peor"){
numm <- ultimo
}else if (is.numeric(num)==TRUE){
numm <- or[num, 2]
} else{
stop("num no es número")
}
Hosp <- c(numm, St[i])
s <- append(s,Hosp)
}
m <- matrix(s,n,2,byrow = T)
colnames(m) <- c("Hospital", "Estado")
rownames(m)<- St
n1 <- data.frame(m)
n1
}
head(rankingcompleto("ataque", 1), 10)
tail(rankingcompleto("neumonia", "peor"), 3)
head(rankingcompleto("ataque", k), 10)
head(rankingcompleto("ataque", "k"), 10)
head(rankingcompleto("ataque", 20), 10)
rankingcompleto <- function(resultado, num = "mejor") {
setwd("C:/Users/Pablo Rendon/Documents/GitHub/Programacion_Actuarial_III_OT2016")
#Lectura de datos
data<- read.csv("outcome-of-care-measures.csv")
s <- numeric()
#Validación de datos
if (resultado == "ataque"){
columna <- 11
}  else if (resultado == "falla"){
columna <- 17
}    else if (resultado == "neumonia") {
columna <- 23
}    else {
stop("resultado inválido")
}
data[,2] <- as.character(data[, 2])
St <- levels(data$State)
n <- length(St)
for(i in 1:n) {
EstadoI <- data[St[i] == data$State,]
co1 <- EstadoI[, columna]
or <- EstadoI[order(co1, na.last = NA), ]
primero <- or[1,2]
ultimo <- or[nrow(or),2]
if(num == "mejor"){
numm <- primero
}else if(num == "peor"){
numm <- ultimo
}else if (is.numeric(num)==TRUE){
numm <- or[num, 2]
} else{
stop("num no es número")
}
Hosp <- c(numm, St[i])
s <- append(s,Hosp)
}
m <- matrix(s,n,2,byrow = T)
colnames(m) <- c("Hospital", "Estado")
rownames(m)<- St
DATOS <- data.frame(m)
DATOS
}
head(rankingcompleto("ataque", 20), 10)
tail(rankingcompleto("neumonia", "peor"), 3)
rankingcompleto <- function(resultado, num = "mejor") {
setwd("C:/Users/Pablo Rendon/Documents/GitHub/Programacion_Actuarial_III_OT2016")
#Lectura de datos
data<- read.csv("outcome-of-care-measures.csv")
s <- numeric()
#Validación de datos
if (resultado == "ataque"){
columna <- 11
}  else if (resultado == "falla"){
columna <- 17
}    else if (resultado == "neumonia") {
columna <- 23
}    else {
stop("resultado inválido")
}
data[,2] <- as.character(data[, 2])
St <- levels(data$State)
n <- length(St)
for(i in 1:n) {
EstadoI <- data[St[i] == data$State,]
co1 <- EstadoI[, columna]
or <- EstadoI[order(co1, na.last = NA), ]
primero <- or[1,2]
ultimo <- or[nrow(or),2]
if(num == "mejor"){
numm <- primero
}else if(num == "peor"){
numm <- ultimo
}else if (is.numeric(num)==TRUE){
numm <- or[num, 2]
} else{
stop("num no es número")
}
Hosp <- c(numm, St[i])
s <- append(s,Hosp)
}
m <- matrix(s,n,2,byrow = T)
colnames(m) <- c("Hospital", "Estado")
rownames(m)<- St
DATOS <- data.frame(m)
DATOS
}
head(rankingcompleto("ataque", 20), 10)
tail(rankingcompleto("neumonia", "peor"), 3)
rankingcompleto <- function(resultado, num = "mejor") {
setwd("C:/Users/Pablo Rendon/Documents/GitHub/Programacion_Actuarial_III_OT2016")
#Lectura de datos
data<- read.csv("outcome-of-care-measures.csv")
s <- numeric()
#Validación de datos
if (resultado == "ataque"){
columna <- 11
}  else if (resultado == "falla"){
columna <- 17
}   else if (resultado == "neumonia") {
columna <- 23
}    else {
stop("resultado inválido")
}
data[,2] <- as.character(data[, 2])
St <- levels(data$State)
n <- length(St)
for(i in 1:n) {
EstadoI <- data[St[i] == data$State,]
co1 <- EstadoI[, columna]
or <- EstadoI[order(co1, na.last = NA), ]
primero <- or[1,2]
ultimo <- or[nrow(or),2]
if(num == "mejor"){
numm <- primero
}else if(num == "peor"){
numm <- ultimo
}else if (is.numeric(num)==TRUE){
numm <- or[num, 2]
} else{
stop("num no es número")
}
Hosp <- c(numm, St[i])
s <- append(s,Hosp)
}
m <- matrix(s,n,2,byrow = T)
colnames(m) <- c("Hospital", "Estado")
rownames(m)<- St
DATOS <- data.frame(m)
DATOS
}
head(rankingcompleto("ataque", 20), 10)
tail(rankingcompleto("neumonia", "peor"), 3)
rankingcompleto <- function(resultado, num = "mejor") {
setwd("C:/Users/Pablo Rendon/Documents/GitHub/Programacion_Actuarial_III_OT2016")
#Lectura de datos
data<- read.csv("outcome-of-care-measures.csv")
s <- numeric()
#Validación de datos
if (resultado == "ataque"){
columna <- 11
}  else if (resultado == "falla"){
columna <- 17
}   else if (resultado == "neumonia") {
columna <- 23
}    else {
stop("resultado inválido")
}
data[,2] <- as.character(data[, 2])
St <- levels(data$State)
n <- length(St)
for(i in 1:n) {
EstadoI <- data[St[i] == data$State,]
co1 <- EstadoI[, columna]
or <- EstadoI[order(co1, na.last = NA), ]
primero <- or[1,2]
ultimo <- or[nrow(or),2]
if(num == "mejor"){
numm <- primero
}else if(num == "peor"){
numm <- ultimo
}else if (is.numeric(num)==TRUE){
numm <- or[num, 2]
} else{
stop("num no es número")
}
Hosp <- c(numm, St[i])
s <- append(s,Hosp)
}
m <- matrix(s,n,2,byrow = T)
colnames(m) <- c("Hospital", "Estado")
rownames(m)<- St
DATOS <- data.frame(m)
DATOS
}
head(rankingcompleto("ataque", 20), 10)
tail(rankingcompleto("neumonia", "peor"), 3)
rankingcompleto <- function(resultado, num = "mejor") {
setwd("C:/Users/Pablo Rendon/Documents/GitHub/Programacion_Actuarial_III_OT2016")
#Lectura de datos
data<- read.csv("outcome-of-care-measures.csv")
s <- numeric()
#Validación de datos
if (resultado == "ataque"){
columna <- 11
}  else if (resultado == "falla"){
columna <- 17
}   else if (resultado == "neumonia") {
columna <- 23
}    else {
stop("resultado inválido")
}
data[,2] <- as.character(data[, 2])
St <- levels(data$State)
n <- length(St)
for(i in 1:n) {
EstadoI <- data[St[i] == data$State,]
co1 <- EstadoI[, columna]
or <- EstadoI[order(co1, na.last = NA), ]
primero <- or[1,2]
ultimo <- or[nrow(or),2]
if(num == "mejor"){
numm <- primero
}else if(num == "peor"){
numm <- ultimo
}else if (is.numeric(num)==TRUE){
numm <- or[num, 2]
} else{
stop("num no es número")
}
Hosp <- c(numm, St[i])
s <- append(s,Hosp)
}
m <- matrix(s,n,2,byrow = T)
colnames(m) <- c("Hospital", "Estado")
rownames(m)<- St
DATOS <- data.frame(m)
DATOS
}
head(rankingcompleto("ataque", 20), 10)
tail(rankingcompleto("neumonia", "peor"), 3)
