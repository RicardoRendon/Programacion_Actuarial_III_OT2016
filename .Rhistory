z<- z+1
} else{z <- z-1
}
}
x
plot(caminata)
caminata <- x
plot(caminata)
z <- 5
x <-c()
while(z>=3 && z<=10) {  # && se evalua un sólo número, V o F
print(z)
moneda <- rbinom(1,1,0.5) #distribución binomial
x <-c(x,z)
if (moneda==1){  #caminata aleatoria  ==igual lógico(V o F)
z<- z+0.5
} else{z <- z-0.5
}
}
x
caminata <- x
plot(caminata)
str(caminata)
?plot
plot(caminata, type="l")
for(i in 1:100)
x <-c()
z <- 5
while(z>=3 && z<=10) {  # && se evalua un sólo número, V o F
print(z)
moneda <- rbinom(1,1,0.5) #distribución binomial
if (moneda==1){  #caminata aleatoria  ==igual lógico(V o F)
z<- z+0.5
} else{z <- z-0.5
}
}
x <-c(x,z)
x
for(i in 1:100){
x <-c()
z <- 5
while(z>=3 && z<=10) {  # && se evalua un sólo número, V o F
print(z)
moneda <- rbinom(1,1,0.5) #distribución binomial
if (moneda==1){  #caminata aleatoria  ==igual lógico(V o F)
z<- z+0.5
} else{z <- z-0.5
}
}
x <-c(x,z)
}
x
caminata <- x
plot(caminata)
for(i in 1:2){
z <- 5
x <-c()
for(i in 1:2){
x <-c()
z <- 5
while(z>=3 && z<=10) {  # && se evalua un sólo número, V o F
print(z)
moneda <- rbinom(1,1,0.5) #distribución binomial
if (moneda==1){  #caminata aleatoria  ==igual lógico(V o F)
z<- z+1
} else{z <- z-1
}
}
x <-c(x,z)
}
x
caminata <- x
plot(caminata)
for(i in 1:2){
x <-c()
z <- 5
while(z>=3 && z<=10) {  # && se evalua un sólo número, V o F
print(z)
moneda <- rbinom(1,1,0.5) #distribución binomial
if (moneda==1){  #caminata aleatoria  ==igual lógico(V o F)
z<- z+1
} else{z <- z-1
}
}
x <-c(x,z)
}
x
for(i in 1:2){   x <-c()
z <- 5
while(z>=3 && z<=10) {  # && se evalua un sólo número, V o F
print(z)
moneda <- rbinom(1,1,0.5) #distribución binomial
if (moneda==1){  #caminata aleatoria  ==igual lógico(V o F)
z<- z+1
} else{z <- z-1
}
}
x <-c(x,z)
}
x
for(i in 1:100)   x <-c()
z <- 5
while(z>=3 && z<=10) {  # && se evalua un sólo número, V o F
print(z)
moneda <- rbinom(1,1,0.5) #distribución binomial
if (moneda==1){  #caminata aleatoria  ==igual lógico(V o F)
z<- z+1
} else{z <- z-1
}
}
x <-c(x,z)
x
for(i in 1:100){
x <-c()
z <- 5
while(z>=3 && z<=10) {  # && se evalua un sólo número, V o F
print(z)
moneda <- rbinom(1,1,0.5) #distribución binomial
if (moneda==1){  #caminata aleatoria  ==igual lógico(V o F)
z<- z+1
} else{z <- z-1
}
}
x <-c(x,z)
}
x
for(i in 1:100)
x <-c()
z <- 5
while(z>=3 && z<=10) {  # && se evalua un sólo número, V o F
print(z)
moneda <- rbinom(1,1,0.5) #distribución binomial
if (moneda==1){  #caminata aleatoria  ==igual lógico(V o F)
z<- z+0.5
} else{z <- z-0.5
}
}
x <-c(x,z)
x
caminata <- x
plot(caminata)
while(z>=3 && z<=10) {  # && se evalua un sólo número, V o F
print(z)
moneda <- rbinom(1,1,0.5) #distribución binomial
if (moneda==1){  #caminata aleatoria  ==igual lógico(V o F)
z<- z+0.5
} else{z <- z-0.5
}
}
x
while(z>=3 && z<=10) {  # && se evalua un sólo número, V o F
print(z)
moneda <- rbinom(1,1,0.5) #distribución binomial
if (moneda==1){  #caminata aleatoria  ==igual lógico(V o F)
z<- z+0.5
} else{z <- z-0.5
}
}
while(z>=3 && z<=10) {  # && se evalua un sólo número, V o F
print(z)
moneda <- rbinom(1,1,0.5) #distribución binomial
x<- c(x,y)
if (moneda==1){  #caminata aleatoria  ==igual lógico(V o F)
z<- z+0.5
} else{z <- z-0.5
}
}
x
while(z>=3 && z<=10) {  # && se evalua un sólo número, V o F
print(z)
moneda <- rbinom(1,1,0.5) #distribución binomial
x<- c(x,y)
if (moneda==1){  #caminata aleatoria  ==igual lógico(V o F)
z<- z+0.5
} else{
z <- z-0.5
}
}
while(z>=3 && z<=10) {  # && se evalua un sólo número, V o F
print(z)
moneda <- rbinom(1,1,0.5) #distribución binomial
x<- c(x,y)
if (moneda==1){  #caminata aleatoria  ==igual lógico(V o F)
z<- z+0.5
} else{
z <- z-0.5
}
}
while(z>=3 && z<=10) {
print(z)
moneda <- rbinom(1,1,0.5)
x<- c(x,y)
if (moneda==1){
z<- z+0.5
} else{
z <- z-0.5
}
}
while(z>=3 && z<=10) {
print(z)
moneda <- rbinom(1,1,0.5)
x<- c(x,y)
if(moneda==1){
z<- z+0.5
} else{
z <- z-0.5
}
}
while (z>=3 && z<=10) {
print(z)
moneda <- rbinom(1,1,0.5)
x<- c(x,y)
if (moneda==1){
z<- z+0.5
} else{
z <- z-0.5
}
}
z<-5
while (z>=3 && z<=10) {
print(z)
moneda <- rbinom(1,1,0.5)
x<- c(x,y)
if (moneda==1){
z<- z+0.5
} else{
z <- z-0.5
}
}
z <- 5
while (z>=3 && z<=10) {
print(z)
moneda <- rbinom(1,1,0.5)
x<- c(x,y)
if (moneda==1){
z<- z+0.5
} else{
z <- z-0.5
}
}
z <- 5
while (z>=3 && z<=10) {
print(z)
moneda <- rbinom(1,1,0.5)
x<- c(x,y)
if (moneda==1){
z<- z+0.5
} else {
z <- z-0.5
}
}
z<-5
While(z>=3 && z<=10) {
print(z)
moneda <- rbinom(1,1,0.5)
x<- c(x,y)
if (moneda==1){
z<- z+1
} else {
z <- z-1
}
}
z<-5
While(z>=3 && z<=10) {
print(z)
moneda <- rbinom(1,1,0.5)
x<- c(x,y)
if (moneda==1){
z<- z+1
} else {
z <- z-1
}
}
z<-5
While(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
x<- c(x,y)
if (moneda==1){
z<- z+1
} else {
z <- z-1
}
}
z<-5
While(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
x<- c(x,y)
if (moneda==1){
z<- z+1
} else {
z <- z-1
}
z<-5
While(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
x<- c(x,y)
if(moneda==1){
z<- z+1
} else {
z <- z-1
}
z<-5
While(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
x<- c(x,y)
if(moneda==1){
z <- z+1
} else {
z <- z-1
}
z<-5
While(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
x<- c(x,y)
if(moneda==1){
z <- z+1
} else {
z <- z-1
}
}
z<-5
While(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
x<- c(x,y)
if(moneda==1){
z <- z+1
} else {
z <- z-1
}
}
z<-5
While(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
x<- c(x,y)
if(moneda==1){
z <- z+1
} else {
z <- z-1
}
}
z<-5
While(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
x<- c(x,y)
if(moneda==1){z <- z+1 } else { z <- z-1}
}
a <- 0
b <- 0
for (i in 1:100){
z <- 5
caminata <- vector("numeric")
while(z>=3 && z<=10){
caminata <- c(caminata,z)
moneda <- rbinom(1,1,0.5)
if(moneda==1){ # Caminata Aleatoria
z <- z+1
} else {
z <- z-1
}
}
print(caminata)
if (z==2){
a <- a+1
} else{
b <- b+1
}
}
# Número de veces que termina en z < 3
print(a)
# Número de veces que termina en z > 10
print(b)
while(z>=3 && z<=10){
caminata <- c(caminata,z)
moneda <- rbinom(1,1,0.5)
if(moneda==1){ # Caminata Aleatoria
z <- z+1
} else {
z <- z-1
}
}
print(caminata)
if (z==2){
a <- a+1
} else{
b <- b+1
x<- NULL
z<-5
While(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
x<- c(x,y)
if(moneda==1){z <- z+1 } else { z <- z-1}
}
x <-c()
z <- 5
while (z>=3 && z<=10) {
print(z)
moneda <- rbinom(1,1,0.5)
x<- c(x,y)
if (moneda==1){
z<- z+0.5
} else {
z <- z-0.5
}
}
x
a <- 0
b <- 0
for (i in 1:100){
x <- vector("numeric")
z <- 5
while(z>=3 && z<=10){
x <- c(x,z)
moneda <- rbinom(1,1,0.5)
if(moneda==1){ # Caminata Aleatoria
z <- z+0.5
} else {
z <- z-0.5
}
}
print(x)
if (z==2){
a <- a+1
} else{
b <- b+1
}
}
# Número de veces que termina en z < 3
a
# Número de veces que termina en z > 10
b
a <- 0
b <- 0
for (i in 1:100){
x <- vector("numeric")
z <- 5
while(z>=3 && z<=10){
x <- c(x,z)
moneda <- rbinom(1,1,0.5)
if(moneda==1){ # Caminata Aleatoria
z <- z+1
} else {
z <- z-1
}
}
print(x)
if (z==2){
a <- a+1
} else{
b <- b+1
}
}
# Número de veces que termina en z < 3
a
# Número de veces que termina en z > 10
b
a <- 0
b <- 0
for (i in 1:100){
x <- vector("numeric")
z <- 5
while(z>=3 && z<=10){
x <- c(x,z)
moneda <- rbinom(1,1,0.5)
if(moneda==1){ # Caminata Aleatoria
z <- z+1
} else {
z <- z-1
}
}
print(x)
if (z==2){
a <- a+1
} else{
b <- b+1
}
}
# Número de veces que termina en z < 3
a
# Número de veces que termina en z > 10
b
a <- 0
b <- 0
for (i in 1:100){
x <- vector("numeric")
z <- 5
while(z>=3 && z<=10){
x <- c(x,z)
moneda <- rbinom(1,1,0.5)
if(moneda==1){ # Caminata Aleatoria
z <- z+1
} else {
z <- z-1
}
}
print(x)
if (z==11){
a <- a+1
} else{
b <- b+1
}
}
a  # veces que z>10
b  # veces que z<3
